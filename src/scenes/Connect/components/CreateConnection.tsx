import React, {useCallback, useMemo} from 'react';
import {useTranslation} from 'react-i18next';

import Clipboard from '@react-native-clipboard/clipboard';
import {Box, Button, Center, Heading, Text, VStack} from 'native-base';
import {QrCode} from 'vision-camera-qrcode-scanner';

import QRCodeReader from '../../../components/QRCodeReader/QRCodeReader';
import {useWizard} from '../../../components/Wizard';
import {ConnectProps} from '../Connect.props';

const CreateConnection = () => {
  const {t} = useTranslation();

  const {values} = useWizard<ConnectProps>();

  const connectionValue = useMemo(() => {
    if (values.urlString) {
      return <QRValue />;
    }
    return <QRReader />;
  }, [values.urlString]);

  return (
    <VStack space="md">
      <Heading textAlign="center">
        {t("Let's connect to your node now")}
      </Heading>
      {connectionValue}
    </VStack>
  );
};

const QRReader = () => {
  const {t} = useTranslation();
  const {setFieldValue} = useWizard<ConnectProps>();

  const handleChangeQrCode = useCallback(
    (qrCodes: QrCode[]) => {
      setFieldValue('urlString', qrCodes[0]?.displayValue);
    },
    [setFieldValue],
  );

  const handlePasteClipboard = useCallback(async () => {
    const string = await Clipboard.getString();
    setFieldValue('urlString', string);
  }, [setFieldValue]);

  return (
    <VStack space="md" justifyContent="center">
      <Box maxH={300} height="100%">
        <QRCodeReader onChange={handleChangeQrCode} />
      </Box>
      <Heading textAlign="center">
        {t('Scan the QR code generated by the lndconnect command')}
      </Heading>
      <Center>
        <Button onPress={handlePasteClipboard}>{t('Paste')}</Button>
      </Center>
    </VStack>
  );
};

const QRValue = () => {
  const {values} = useWizard<ConnectProps>();
  const {t} = useTranslation();
  return (
    <VStack space="md">
      <Text textAlign="center" numberOfLines={2}>
        {values.urlString}
      </Text>
      <Heading textAlign="center">
        {t('Verify that the URL matches your node info')}
      </Heading>
    </VStack>
  );
};

export default CreateConnection;
